define
(
    ["model/base"],
    function (base)
    {

        var AccumulationKind =
        {
            none: "none",
            bulkQuantity: "bulkQuantity",
            continuousCumulative: "continuousCumulative",
            cumulative: "cumulative",
            deltaData: "deltaData",
            indicating: "indicating",
            summation: "summation",
            timeDelay: "timeDelay",
            instantaneous: "instantaneous",
            latchingQuantity: "latchingQuantity",
            boundedQuantity: "boundedQuantity"
        };
        Object.freeze (AccumulationKind);

        var FlowDirectionKind =
        {
            none: "none",
            forward: "forward",
            lagging: "lagging",
            leading: "leading",
            net: "net",
            q1plusQ2: "q1plusQ2",
            q1plusQ3: "q1plusQ3",
            q1plusQ4: "q1plusQ4",
            q1minusQ4: "q1minusQ4",
            q2plusQ3: "q2plusQ3",
            q2plusQ4: "q2plusQ4",
            q2minusQ3: "q2minusQ3",
            q3plusQ4: "q3plusQ4",
            q3minusQ2: "q3minusQ2",
            quadrant1: "quadrant1",
            quadrant2: "quadrant2",
            quadrant3: "quadrant3",
            quadrant4: "quadrant4",
            reverse: "reverse",
            total: "total",
            totalByPhase: "totalByPhase"
        };
        Object.freeze (FlowDirectionKind);

        var MeasuringPeriodKind =
        {
            none: "none",
            tenMinute: "tenMinute",
            fifteenMinute: "fifteenMinute",
            oneMinute: "oneMinute",
            twentyfourHour: "twentyfourHour",
            thirtyMinute: "thirtyMinute",
            fiveMinute: "fiveMinute",
            sixtyMinute: "sixtyMinute",
            twoMinute: "twoMinute",
            threeMinute: "threeMinute",
            present: "present",
            previous: "previous",
            twentyMinute: "twentyMinute",
            fixedBlock60Min: "fixedBlock60Min",
            fixedBlock30Min: "fixedBlock30Min",
            fixedBlock20Min: "fixedBlock20Min",
            fixedBlock15Min: "fixedBlock15Min",
            fixedBlock10Min: "fixedBlock10Min",
            fixedBlock5Min: "fixedBlock5Min",
            fixedBlock1Min: "fixedBlock1Min",
            rollingBlock60MinIntvl30MinSubIntvl: "rollingBlock60MinIntvl30MinSubIntvl",
            rollingBlock60MinIntvl20MinSubIntvl: "rollingBlock60MinIntvl20MinSubIntvl",
            rollingBlock60MinIntvl15MinSubIntvl: "rollingBlock60MinIntvl15MinSubIntvl",
            rollingBlock60MinIntvl12MinSubIntvl: "rollingBlock60MinIntvl12MinSubIntvl",
            rollingBlock60MinIntvl10MinSubIntvl: "rollingBlock60MinIntvl10MinSubIntvl",
            rollingBlock60MinIntvl6MinSubIntvl: "rollingBlock60MinIntvl6MinSubIntvl",
            rollingBlock60MinIntvl5MinSubIntvl: "rollingBlock60MinIntvl5MinSubIntvl",
            rollingBlock60MinIntvl4MinSubIntvl: "rollingBlock60MinIntvl4MinSubIntvl",
            rollingBlock30MinIntvl15MinSubIntvl: "rollingBlock30MinIntvl15MinSubIntvl",
            rollingBlock30MinIntvl10MinSubIntvl: "rollingBlock30MinIntvl10MinSubIntvl",
            rollingBlock30MinIntvl6MinSubIntvl: "rollingBlock30MinIntvl6MinSubIntvl",
            rollingBlock30MinIntvl3MinSubIntvl: "rollingBlock30MinIntvl3MinSubIntvl",
            rollingBlock30MinIntvl2MinSubIntvl: "rollingBlock30MinIntvl2MinSubIntvl",
            rollingBlock15MinIntvl5MinSubIntvl: "rollingBlock15MinIntvl5MinSubIntvl",
            rollingBlock15MinIntvl3MinSubIntvl: "rollingBlock15MinIntvl3MinSubIntvl",
            rollingBlock15MinIntvl1MinSubIntvl: "rollingBlock15MinIntvl1MinSubIntvl",
            rollingBlock10MinIntvl5MinSubIntvl: "rollingBlock10MinIntvl5MinSubIntvl",
            rollingBlock10MinIntvl2MinSubIntvl: "rollingBlock10MinIntvl2MinSubIntvl",
            rollingBlock10MinIntvl1MinSubIntvl: "rollingBlock10MinIntvl1MinSubIntvl",
            rollingBlock5MinIntvl1MinSubIntvl: "rollingBlock5MinIntvl1MinSubIntvl",
            rollingBlock30MinIntvl5MinSubIntvl: "rollingBlock30MinIntvl5MinSubIntvl"
        };
        Object.freeze (MeasuringPeriodKind);

        var MeasurementKind =
        {
            none: "none",
            apparentPowerFactor: "apparentPowerFactor",
            currency: "currency",
            current: "current",
            currentAngle: "currentAngle",
            currentImbalance: "currentImbalance",
            date: "date",
            demand: "demand",
            distance: "distance",
            distortionVoltAmp: "distortionVoltAmp",
            energization: "energization",
            energy: "energy",
            energizationLoadSide: "energizationLoadSide",
            fan: "fan",
            frequency: "frequency",
            fund: "fund",
            ieee1366ASAI: "ieee1366ASAI",
            ieee1366ASIDI: "ieee1366ASIDI",
            ieee1366ASIFI: "ieee1366ASIFI",
            ieee1366CAIDI: "ieee1366CAIDI",
            ieee1366CAIFI: "ieee1366CAIFI",
            ieee1366CEMIn: "ieee1366CEMIn",
            ieee1366CEMSMIn: "ieee1366CEMSMIn",
            ieee1366CTAIDI: "ieee1366CTAIDI",
            ieee1366MAIFI: "ieee1366MAIFI",
            ieee1366MAIFIe: "ieee1366MAIFIe",
            ieee1366SAIDI: "ieee1366SAIDI",
            ieee1366SAIFI: "ieee1366SAIFI",
            lineLoss: "lineLoss",
            loss: "loss",
            negativeSequence: "negativeSequence",
            phasorPowerFactor: "phasorPowerFactor",
            phasorReactivePower: "phasorReactivePower",
            positiveSequence: "positiveSequence",
            power: "power",
            powerFactor: "powerFactor",
            quantityPower: "quantityPower",
            sag: "sag",
            swell: "swell",
            switchPosition: "switchPosition",
            tapPosition: "tapPosition",
            tariffRate: "tariffRate",
            temperature: "temperature",
            totalHarmonicDistortion: "totalHarmonicDistortion",
            transformerLoss: "transformerLoss",
            unipedeVoltageDip10to15: "unipedeVoltageDip10to15",
            unipedeVoltageDip15to30: "unipedeVoltageDip15to30",
            unipedeVoltageDip30to60: "unipedeVoltageDip30to60",
            unipedeVoltageDip60to90: "unipedeVoltageDip60to90",
            unipedeVoltageDip90to100: "unipedeVoltageDip90to100",
            voltage: "voltage",
            voltageAngle: "voltageAngle",
            voltageExcursion: "voltageExcursion",
            voltageImbalance: "voltageImbalance",
            volume: "volume",
            zeroFlowDuration: "zeroFlowDuration",
            zeroSequence: "zeroSequence",
            distortionPowerFactor: "distortionPowerFactor",
            frequencyExcursion: "frequencyExcursion",
            applicationContext: "applicationContext",
            apTitle: "apTitle",
            assetNumber: "assetNumber",
            bandwidth: "bandwidth",
            batteryVoltage: "batteryVoltage",
            broadcastAddress: "broadcastAddress",
            deviceAddressType1: "deviceAddressType1",
            deviceAddressType2: "deviceAddressType2",
            deviceAddressType3: "deviceAddressType3",
            deviceAddressType4: "deviceAddressType4",
            deviceClass: "deviceClass",
            electronicSerialNumber: "electronicSerialNumber",
            endDeviceID: "endDeviceID",
            groupAddressType1: "groupAddressType1",
            groupAddressType2: "groupAddressType2",
            groupAddressType3: "groupAddressType3",
            groupAddressType4: "groupAddressType4",
            ipAddress: "ipAddress",
            macAddress: "macAddress",
            mfgAssignedConfigurationID: "mfgAssignedConfigurationID",
            mfgAssignedPhysicalSerialNumber: "mfgAssignedPhysicalSerialNumber",
            mfgAssignedProductNumber: "mfgAssignedProductNumber",
            mfgAssignedUniqueCommunicationAddress: "mfgAssignedUniqueCommunicationAddress",
            multiCastAddress: "multiCastAddress",
            oneWayAddress: "oneWayAddress",
            signalStrength: "signalStrength",
            twoWayAddress: "twoWayAddress",
            signaltoNoiseRatio: "signaltoNoiseRatio",
            alarm: "alarm",
            batteryCarryover: "batteryCarryover",
            dataOverflowAlarm: "dataOverflowAlarm",
            demandLimit: "demandLimit",
            demandReset: "demandReset",
            diagnostic: "diagnostic",
            emergencyLimit: "emergencyLimit",
            encoderTamper: "encoderTamper",
            ieee1366MomentaryInterruption: "ieee1366MomentaryInterruption",
            ieee1366MomentaryInterruptionEvent: "ieee1366MomentaryInterruptionEvent",
            ieee1366SustainedInterruption: "ieee1366SustainedInterruption",
            interruptionBehaviour: "interruptionBehaviour",
            inversionTamper: "inversionTamper",
            loadInterrupt: "loadInterrupt",
            loadShed: "loadShed",
            maintenance: "maintenance",
            physicalTamper: "physicalTamper",
            powerLossTamper: "powerLossTamper",
            powerOutage: "powerOutage",
            powerQuality: "powerQuality",
            powerRestoration: "powerRestoration",
            programmed: "programmed",
            pushbutton: "pushbutton",
            relayActivation: "relayActivation",
            relayCycle: "relayCycle",
            removalTamper: "removalTamper",
            reprogrammingTamper: "reprogrammingTamper",
            reverseRotationTamper: "reverseRotationTamper",
            switchArmed: "switchArmed",
            switchDisabled: "switchDisabled",
            tamper: "tamper",
            watchdogTimeout: "watchdogTimeout",
            billLastPeriod: "billLastPeriod",
            billToDate: "billToDate",
            billCarryover: "billCarryover",
            connectionFee: "connectionFee",
            audibleVolume: "audibleVolume",
            volumetricFlow: "volumetricFlow"
        };
        Object.freeze (MeasurementKind);

        var CommodityKind =
        {
            none: "none",
            electricitySecondaryMetered: "electricitySecondaryMetered",
            electricityPrimaryMetered: "electricityPrimaryMetered",
            communication: "communication",
            air: "air",
            insulativeGas: "insulativeGas",
            insulativeOil: "insulativeOil",
            naturalGas: "naturalGas",
            propane: "propane",
            potableWater: "potableWater",
            steam: "steam",
            wasteWater: "wasteWater",
            heatingFluid: "heatingFluid",
            coolingFluid: "coolingFluid",
            nonpotableWater: "nonpotableWater",
            nox: "nox",
            so2: "so2",
            ch4: "ch4",
            co2: "co2",
            carbon: "carbon",
            hch: "hch",
            pfc: "pfc",
            sf6: "sf6",
            tvLicence: "tvLicence",
            internet: "internet",
            refuse: "refuse"
        };
        Object.freeze (CommodityKind);

        var AggregateKind =
        {
            none: "none",
            average: "average",
            excess: "excess",
            highThreshold: "highThreshold",
            lowThreshold: "lowThreshold",
            maximum: "maximum",
            minimum: "minimum",
            nominal: "nominal",
            normal: "normal",
            secondMaximum: "secondMaximum",
            secondMinimum: "secondMinimum",
            thirdMaximum: "thirdMaximum",
            fourthMaximum: "fourthMaximum",
            fifthMaximum: "fifthMaximum",
            sum: "sum"
        };
        Object.freeze (AggregateKind);

        var MacroPeriodKind =
        {
            none: "none",
            billingPeriod: "billingPeriod",
            daily: "daily",
            monthly: "monthly",
            seasonal: "seasonal",
            weekly: "weekly",
            specifiedPeriod: "specifiedPeriod"
        };
        Object.freeze (MacroPeriodKind);

        return (
            {
                AccumulationKind: AccumulationKind,
                MeasuringPeriodKind: MeasuringPeriodKind,
                FlowDirectionKind: FlowDirectionKind,
                CommodityKind: CommodityKind,
                MeasurementKind: MeasurementKind,
                AggregateKind: AggregateKind,
                MacroPeriodKind: MacroPeriodKind
            }
        );
    }
);