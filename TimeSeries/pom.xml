<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>CIMApplication</artifactId>
        <groupId>ch.ninecode.cim</groupId>
        <relativePath>../pom.xml</relativePath>
        <version>2.12-3.0.1-3.0.3</version>
    </parent>
    <artifactId>TimeSeries</artifactId>
    <groupId>ch.ninecode.ts</groupId>
    <name>TimeSeries</name>
    <description>Validate, correct and model time series in Cassandra using Spark and Scala</description>
    <inceptionYear>2019</inceptionYear>
    <url>https://github.com/derrickoswald/CIMApplication/tree/master/TimeSeries</url>
    <scm>
        <url>git@github.com:derrickoswald/CIMApplication.git</url>
        <connection>scm:git:git@github.com:derrickoswald/CIMApplication.git</connection>
        <developerConnection>scm:git:git@github.com:derrickoswald/CIMApplication.git</developerConnection>
    </scm>

    <properties>
        <version.dependency.log4j>2.12.1</version.dependency.log4j>
    </properties>

    <dependencies>

        <dependency>
            <groupId>ch.ninecode.util</groupId>
            <artifactId>Util</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector_${version.dependency.scala}</artifactId>
            <version>${version.dependency.cassandra_spark}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${version.dependency.joda-time}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${version.dependency.scala}</artifactId>
            <version>${version.dependency.scopt}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${version.dependency.scalalibrary}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${version.dependency.scalalibrary}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${version.dependency.scala}</artifactId>
            <version>${version.dependency.spark}</version>
            <scope>provided</scope>
        </dependency>

        <!--
        <dependency>
            <groupId>com.intel.analytics.bigdl</groupId>
            <artifactId>bigdl-SPARK_2.4</artifactId>
            <version>${version.dependency.bigdl}</version>
            <scope>compile</scope>
        </dependency>
        -->

        <dependency>
            <groupId>ch.ninecode.testutil</groupId>
            <artifactId>TestUtil</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.dependency.junit}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.datastax.oss</groupId>
            <artifactId>java-driver-core</artifactId>
            <version>${version.dependency.cassandra_driver}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.dependency.maven-surefire-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.dependency.maven-failsafe-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <runOrder>reversealphabetical</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.dependency.build-helper-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <!-- reserve the ports in the phase before process-test-resources (where the resources are filtered and copied) -->
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>cassandra.jmxPort</portName>
                                <portName>cassandra.rpcPort</portName>
                                <portName>cassandra.stopPort</portName>
                                <portName>cassandra.storagePort</portName>
                                <portName>cassandra.nativeTransportPort</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cassandra-maven-plugin</artifactId>
                <version>${version.dependency.cassandra-maven-plugin}</version>
                <configuration>
                    <clusterSize>1</clusterSize>
                    <startNativeTransport>true</startNativeTransport>
                    <cqlVersion>${version.dependency.cql}</cqlVersion>
                    <yaml>
rpc_port: ${cassandra.rpcPort}
storage_port: ${cassandra.storagePort}
native_transport_port: ${cassandra.nativeTransportPort}
enable_user_defined_functions: true
enable_scripted_user_defined_functions: true
                    </yaml>
                    <script>${basedir}/src/test/resources/test_timeseries_schema.sql</script>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>cassandra-all</artifactId>
                        <version>${version.dependency.cassandra_all}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-cassandra</artifactId>
                        <version>${version.dependency.log4j}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                        <version>${version.dependency.log4j}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>Start Cassandra</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Stop Cassandra</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- assembly for stand-alone program -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${version.dependency.maven-assembly-plugin}</version>
                <executions>
                    <execution>
                        <id>make-timeseries-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>TimeSeries-${project.parent.version}</finalName>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>ch.ninecode.ts.TimeSeries</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
